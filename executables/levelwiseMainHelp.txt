This is a Levelwise Mining Algorithm for TreePatterns
implemented by Pascal Welke 2013, 2015


usage: lwm [ARGS] FILE
    
    FILE: (required) use FILE as tree database

    -t THRESHOLD: absolute frequency threshold for subtree patterns
                  (e.g. 32 if a pattern has to occur in at least 32
                  transactions to be frequent) (default 1000)

    -e OPERATOR:  embedding operator used for frequent subtree mining.
            existence:  A subtree T matches a transaction graph G if there
                        is at least one tree H in the set representing G 
                        such that T is subgraph isomorphic to H.
            importance: A subtree T matches a transaction graph G if T is
                        subgraph isomorphic to at least a FRACTION-fraction 
                        of all trees representing G.
        
    -i FRACTION: relative fraction of spanning trees of a graph s.t.
                 a subtree S is considered a match. I.e. S is subgraph 
                 of at least F*X trees given X trees for a graph. Must
                 be a float between 0 and 1.
         
    -p SIZE:  maximum number of edges in frequent patterns (default 20). 
              I.e. mining will stop after P levels.

    -o PREFIX: Specify a common prefix for the output files of the program.
               By default, the name of the input file is used.
        
    -v:  display some process information during mining
    -h:  display this help
    